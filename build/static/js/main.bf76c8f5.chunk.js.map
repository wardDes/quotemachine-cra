{"version":3,"sources":["reducers/index.js","store/index.js","QuoteBox.js","App.js","index.js"],"names":["intiialState","quotes","rootReducer","state","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","library","add","fab","faQuoteLeft","QuoteBox","props","handleClick","colorChange","quoteAndAuthor","color","colorBackground","Math","floor","random","length","setState","quote","quoteObj","author","setBgBd","bodyBg","document","querySelector","style","background","borderColor","buildQuotes","data","concat","Object","values","bind","console","log","fetch","then","response","json","this","catch","err","id","className","icon","size","backgroundColor","href","title","target","rel","onClick","Component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bf76c8f5.chunk.js","sourcesContent":["const intiialState = {\r\n    quotes: []\r\n}\r\n\r\nfunction rootReducer(state=intiialState, action){\r\n    return state\r\n}\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from '../reducers/index.js'\r\n\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport './qbstyles.scss'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nlibrary.add(fab, faQuoteLeft)\r\n\r\n\r\n\r\nexport class QuoteBox extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            quotes: [],\r\n            quoteObj: {},\r\n            quote: \"\",\r\n            author: \"\",\r\n            color: \"\",\r\n            colorBackground: [\r\n                \"#23f83b\",\r\n                \"#84c828\",\r\n                \"#9f215a\",\r\n                \"#0c6583\",\r\n                \"#4238e5\",\r\n                \"#ff126e\",\r\n                \"#ce790b\",\r\n                \"#9010e5\",\r\n                \"#f36d69\",\r\n                \"#ba2654\",\r\n                \"#4a0d70\",\r\n                \"#6e6672\",\r\n                \"#3790f1\",\r\n                \"#cea92f\"\r\n            ]\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.colorChange = this.colorChange.bind(this)\r\n        this.quoteAndAuthor = this.quoteAndAuthor.bind(this)\r\n        this.setBgBd = this.setBgBd.bind(this)\r\n\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.colorChange();\r\n        this.quoteAndAuthor();\r\n    }\r\n\r\n\r\n    colorChange = (state)=> {\r\n        const color = this.state.colorBackground[Math.floor((Math.random() * ((this.state.colorBackground).length)))]\r\n        this.setState({...state, color: color})\r\n        \r\n    }\r\n\r\n    quoteAndAuthor = (state) => {\r\n        this.setState({quote: this.state.quoteObj.quote, author: this.state.quoteObj.author})\r\n        this.setState({quoteObj: this.state.quotes[0][Math.floor(Math.random() * this.state.quotes[0].length)]});\r\n    }\r\n\r\n    setBgBd = (state) =>{\r\n        let bodyBg = document.querySelector('body')\r\n        bodyBg.style.background = this.state.color;\r\n        bodyBg.style.borderColor = this.state.color;\r\n    }\r\n\r\n\r\n    buildQuotes = (data) =>{\r\n        this.setState({quotes: [].concat(Object.values(data))});\r\n        this.setState({quoteObj: this.state.quotes[0][Math.floor(Math.random() * this.state.quotes[0].length)]});\r\n        this.setState({quote: this.state.quoteObj.quote, author: this.state.quoteObj.author})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('didmount');\r\n        const url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(this.buildQuotes)\r\n            .then(this.colorChange)\r\n            .then(this.quoteAndAuthor)\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render(){\r\n        const { quote, author, color} = this.state\r\n        this.setBgBd()\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <div className=\"text-container\">\r\n                    <div id=\"text\" style={{color: color}}><FontAwesomeIcon icon={['fas', 'quote-left']}  size=\"2x\"/><span>  {quote}</span></div>\r\n                </div>\r\n                <div className=\"author-container\">\r\n                    <div id=\"author\" style={{color: color}}>- {author}</div>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                        <div>\r\n                            <a  className=\"button\" style={{color: '#fff', backgroundColor: color}} href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quote}\" ${author}`}  id=\"tweet-quote\" title=\"Tweet this quote!\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={['fab', 'twitter']} /></a>\r\n                        </div>\r\n                        <button id=\"new-quote\" style={{backgroundColor: color}} onClick={this.handleClick}>New Quote</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default QuoteBox","import React from 'react';\nimport QuoteBox from './QuoteBox'\nimport './qbstyles.scss'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store/index\"\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n            <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}